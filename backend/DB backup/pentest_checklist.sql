-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Apr 22, 2024 at 12:25 PM
-- Server version: 10.4.32-MariaDB
-- PHP Version: 8.0.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `pentest_checklist`
--

-- --------------------------------------------------------

--
-- Table structure for table `findings`
--

CREATE TABLE `findings` (
  `sl_no` int(11) NOT NULL,
  `protocol` varchar(200) NOT NULL DEFAULT 'default protocol',
  `prj_name` varchar(200) NOT NULL DEFAULT 'Default prj name',
  `detection_name` varchar(200) NOT NULL DEFAULT 'default_detection',
  `description` varchar(500) NOT NULL DEFAULT '',
  `impact` varchar(500) NOT NULL,
  `remediation` varchar(500) NOT NULL,
  `file_path` varchar(200) NOT NULL DEFAULT 'default_path'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `findings`
--

INSERT INTO `findings` (`sl_no`, `protocol`, `prj_name`, `detection_name`, `description`, `impact`, `remediation`, `file_path`) VALUES
(55, 'BLE', 'Tk_Jolt', 'Fuzzing', 'Injects data into a stack or program and has the ability to detect bugs.', 'Facilitates systematic testing for vulnerabilities.', 'Regularly update firmware and software, conduct security audits, and implement input validation.', 'Pentest-Checklist\\Madhuri\\Thermoking\\Tk_Jolt\\BLE\\JoltR6-ble-fuzz.PNG'),
(56, 'BLE', 'Tk_Jolt', 'Fuzzing', 'Injects data into a stack or program and has the ability to detect bugs.', 'Facilitates systematic testing for vulnerabilities.', 'Regularly update firmware and software, conduct security audits, and implement input validation.', 'Pentest-Checklist\\Madhuri\\Thermoking\\Tk_Jolt\\BLE\\JoltR6-ble-scan1.png'),
(57, 'BLE', 'Tk_Jolt', 'Fuzzing', 'Injects data into a stack or program and has the ability to detect bugs.', 'Facilitates systematic testing for vulnerabilities.', 'Regularly update firmware and software, conduct security audits, and implement input validation.', 'Pentest-Checklist\\Madhuri\\Thermoking\\Tk_Jolt\\BLE\\JoltR6-ble-scan2.png');

-- --------------------------------------------------------

--
-- Table structure for table `pentest_test_cases`
--

CREATE TABLE `pentest_test_cases` (
  `sl_no` varchar(200) NOT NULL DEFAULT 'default no',
  `protocol` varchar(20) DEFAULT 'Undefined Protocol',
  `test_case_name` varchar(200) NOT NULL DEFAULT 'Default test case',
  `description` varchar(1000) NOT NULL DEFAULT 'Default Description',
  `impact` varchar(1000) NOT NULL DEFAULT 'Default imapct',
  `remediation` varchar(1000) NOT NULL DEFAULT 'Default Rem'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `pentest_test_cases`
--

INSERT INTO `pentest_test_cases` (`sl_no`, `protocol`, `test_case_name`, `description`, `impact`, `remediation`) VALUES
('Bluetooth-1', 'Bluetooth', 'Insecure Pairing: Spoofing-Mac Address', 'Bluetooth spoofing refers to trick a Bluetooth device into believing it\'s communicating with another device when it\'s not. ', 'Allows unauthorized devices to masquerade as legitimate ones, potentially leading to unauthorized access or data interception.', 'Implement secure pairing mechanisms such as secure simple pairing (SSP) or use additional authentication methods to verify device identities.'),
('Bluetooth-2', 'Bluetooth', 'Insecure Pairing: Spoofing-Advertising packet spoofing', 'Bluetooth advertising packet spoofing involves creating and transmitting fraudulent Bluetooth advertising packets to deceive devices into thinking they\'re communicating with legitimate devices. ', 'Enables attackers to manipulate Bluetooth advertising packets to deceive devices into connecting to malicious ones, leading to potential data theft or device compromise.', 'Employ secure advertising protocols and validate device identities through secure pairing mechanisms to prevent spoofing attacks.'),
('Bluetooth-3', 'Bluetooth', 'Insecure Pairing:Hijacking- BlueSnarfing', 'Bluesnarfing is a form of cyberattack that involves illegally accessing information on a device through its Bluetooth connection.  Targeting the OBEX and Service Discovery Protocol.', 'Allows attackers to remotely access sensitive information (e.g., contacts, messages) from Bluetooth-enabled devices without user consent.', 'Update devices with patches that address BlueSnarfing vulnerabilities, disable unnecessary Bluetooth services, and educate users about the risks of unauthorized access.'),
('Bluetooth-4', 'Bluetooth', 'None Existent User and Device Authentication:Hijacking-BlueSnarfing', 'Bluesnarfing is a form of cyberattack that involves illegally accessing information on a device through its Bluetooth connection. Targeting the OBEX and Service Discovery Protocol.', 'Permits unauthorized access to Bluetooth-enabled devices due to the absence of robust authentication mechanisms, leading to data breaches or device compromise.', 'Implement strong authentication protocols, such as two-factor authentication or biometric authentication, to verify user and device identities.'),
('Bluetooth-5', 'Bluetooth', 'DoS-Jamming', 'Services are distrupted by flooding data requests, making a machine or network unavailable to users. ', 'Disrupts Bluetooth communication by flooding the network with excessive traffic, causing denial of service for legitimate users.', 'Employ frequency hopping techniques, use signal jamming detection mechanisms, or implement Bluetooth Low Energy (BLE) to reduce susceptibility to jamming attacks.'),
('Bluetooth-6', 'Bluetooth', 'DoS- Bluetooth DeAuth', 'Services are distrupted by flooding data requests, making a machine or network unavailable to users.,Forces Bluetooth devices to disconnect from their networks, disrupting legitimate services and causing service interruptions.', 'Implement encryption and authentication mechanisms to prevent unauthorized deauthentication requests, and monitor network traffic for anomalies indicating potential attacks.', ''),
('Bluetooth-7', 'Bluetooth', 'DoS', 'Services are distrupted by flooding data requests, making a machine or network unavailable to users. ,Overwhelms Bluetooth devices or networks with malicious traffic', ' rendering them unable to function properly.', 'Implement rate limiting, traffic filtering, and intrusion detection systems to detect and mitigate DoS attacks effectively.'),
('Bluetooth-8', 'Bluetooth', 'Fuzzing', 'Injects data into a stack or program and has the ability to detect bugs.', 'Uncovers software vulnerabilities in Bluetooth implementations by sending malformed or unexpected data, potentially leading to system crashes or remote code execution.', 'Conduct regular security audits, implement input validation mechanisms, and update firmware/software to address identified vulnerabilities.'),
('Bluetooth-9', 'Bluetooth', 'Known Vulnerabilities- BrakTooth', 'Group of 12 vulnerabilities where an attacker could exploit BrakTooth vulnerabilities to cause a range of effects from denial-of-service to arbitrary code execution. Only Affected BR/EDR chipsets,Exploits vulnerabilities in Bluetooth chipsets', ' potentially leading to denial of service, information disclosure, or arbitrary code execution.', 'Apply patches provided by chipset manufacturers, restrict Bluetooth access, and update affected devices to mitigate BrakTooth vulnerabilities.'),
('Bluetooth-10', 'Bluetooth', 'Known Vulnerabilities-BlueBorne', 'BlueBorne is an attack virus that spreads through air and gets into a device via bluetooth and can then take full control of the device. The targeted device does not need to be paired to the attackerâ€™s device or even to be set on discoverable mode.', 'Allows attackers to remotely execute arbitrary code or take control of Bluetooth-enabled devices, compromising their security and privacy.', 'Install security patches released by device manufacturers, disable Bluetooth when not in use, and regularly update device firmware to address BlueBorne vulnerabilities.'),
('1a', '1', '1', '1', '1', '1'),
('BLE-1', 'BLE', 'Insecure Pairing : Spoofing', 'Bluetooth spoofing refers to techniques used to deceive a Bluetooth device into thinking it\'s interacting with another device.', 'Allows attackers to impersonate legitimate devices.', 'Implement secure pairing methods such as using passkeys or out-of-band authentication.'),
('BLE-2', 'BLE', 'Insecure Pairing: Hijacking', 'Hijacking refers to gaining unauthorized access or control over BLE devices or manipulating their communication.', 'Enables unauthorized access to data exchanged between devices.', 'Employ secure pairing mechanisms like Secure Simple Pairing (SSP) or Secure Connections.'),
('BLE-3', 'BLE', 'Insecure Pairing Cracking BLE Encryption', 'Cracking Bluetooth Low Energy (BLE) encryption typically involves exploiting vulnerabilities in the pairing process or sniffing encrypted communication packets to extract encryption keys for decryption, potentially allowing unauthorized access to data exchanged between BLE devices.', 'Provides unauthorized access to encrypted data exchanged between devices.', 'Utilize secure pairing protocols like LE Secure Connections (LE SC) to prevent encryption cracking.'),
('BLE-4', 'BLE', 'Insceure Pairing: MITM', 'Attackers trick devices into thinking they are paired, when in reality they are both connected to the attacker.', 'Facilitates interception of communication between devices.', 'Utilize secure pairing protocols like LE Secure Connections (LE SC) to prevent MITM attacks.'),
('BLE-5', 'BLE', 'Non Existent User Authentication: Spoofing', 'Bluetooth spoofing refers to trick a Bluetooth device into believing it\'s communicating with another device when it\'s not. ', 'Permits unauthorized users to masquerade as legitimate ones.', 'Implement strong user authentication methods such as biometrics or multi-factor authentication.'),
('BLE-6', 'BLE', 'Non Existent User AuthenticationL MITM', 'Attackers trick devices into thinking they are paired, when in reality they are both connected to the attacker.', 'Allows attackers to intercept and manipulate user authentication.', 'Employ secure communication channels and encryption to prevent MITM attacks.'),
('BLE-7', 'BLE', 'Non Existent User Authentication: DoS', 'Services are distrupted  by flooding data requests, making a machine or network unavailable to users', 'Leaves systems vulnerable to denial-of-service attacks.', 'Implement rate limiting, access controls, and network monitoring to mitigate DoS threats.'),
('BLE-8', 'BLE', 'MITM', 'Attackers trick devices into thinking they are paired, when in reality they are both connected to the attacker.', 'Allows attackers to intercept and manipulate data flows.', 'Employ end-to-end encryption and implement certificate pinning to prevent MITM attacks.'),
('BLE-9', 'BLE', 'DoS', 'Services are distrupted  by flooding data requests, making a machine or network unavailable to users', 'Disrupts or disables the operation of BLE devices.', 'Implement filtering mechanisms, rate limiting, and redundancy to mitigate DoS attacks.'),
('BLE-10', 'BLE', 'Fuzzing', 'Injects data into a stack or program and has the ability to detect bugs.', 'Facilitates systematic testing for vulnerabilities.', 'Regularly update firmware and software, conduct security audits, and implement input validation.'),
('BLE-11', 'BLE', 'Known Vulnerabilities: SweynTooth', 'Group of 12 vulnerabilities across different BLE software development kits (SDKs) of seven major system-on-a-chip (SoC) vendors. The vulnerabilities expose flaws in specific BLE SoC implementations that allow an attacker in radio range to trigger deadlocks, crashes and buffer overflows or completely bypass security.', 'Can lead to remote code execution or device malfunctions.', 'Apply patches provided by vendors, update firmware, and restrict access to vulnerable devices.'),
('BLE-12', 'BLE', 'Known Vulnerabilities:Bleeding Bit', 'Bleedingbit, discovered in 2018, affected TI BLE chips (cc2640, cc2650) embedded in access points from Cisco, Meraki, and Aruba. BLEEDINGBIT RCE vulnerability (CVE-2018-16986) BLEEDINGBIT OAD RCE vulnerability (CVE-2018-7080)', 'Enables attackers to execute arbitrary code on affected devices.', 'Install patches provided by vendors, disable affected features if necessary, and monitor for anomalous behavior.'),
('BLE-13', 'BLE', 'Known Vulnerabilities: BtleJuice', 'BtleJuice is a framework for performing Man-in-the-Middle (MitM) attacks on Bluetooth Low Energy (BLE) devices. ', 'Can lead to unauthorized access or manipulation of BLE devices.', 'Apply vendor-provided patches, update firmware, and implement network.'),
('2a', '1', '1', '1', '1', '1'),
('Zigbee-1', 'Zigbee', 'OTA Crypto key sniffing', 'Attackers intercept and decrypt cryptographic keys exchanged over-the-air during device updates.', 'Enables unauthorized access to encrypted data and compromises device security.', 'Implement secure encryption protocols and mechanisms for OTA updates, such as using secure channels and strong encryption algorithms.'),
('Zigbee-2', 'Zigbee', 'Replay Attack', 'Malicious entities capture and replay previously recorded data packets to impersonate legitimate devices.', 'Can lead to unauthorized access, data manipulation, or denial of service.', 'Implement nonce-based message authentication codes (MACs) or timestamp verification to prevent replay attacks.'),
('Zigbee-3', 'Zigbee', 'RAM Dump Attack', 'Attackers exploit vulnerabilities to dump the contents of a device\'s RAM, potentially revealing sensitive data.', 'Allows attackers to access sensitive information stored in RAM, including encryption keys or user credentials.', 'Employ secure coding practices, memory protection mechanisms, and encryption for sensitive data stored in RAM.'),
('Zigbee-4', 'Zigbee', 'Find all devices', 'Malicious actors scan for all available devices within a network, probing for potential targets.', 'May lead to unauthorized access, reconnaissance, or targeted attacks against discovered devices.', 'Implement network segmentation, access controls, and authentication mechanisms to restrict unauthorized device discovery.'),
('Zigbee-5', 'Zigbee', 'Open-source/Third-party Zigbee', 'Utilizing open-source or third-party Zigbee implementations can introduce vulnerabilities or backdoors.', 'Increases the risk of security breaches, exploitation of vulnerabilities, or unauthorized access to Zigbee networks.', 'Regularly update and vet open-source or third-party Zigbee libraries, implement security best practices, and conduct security audits.'),
('Zigbee-6', 'Zigbee', 'lack of CRC verification', 'Data packets lack CRC verification, enabling transmission errors to go undetected or manipulated.', 'May result in data corruption, tampering, or injection attacks compromising the integrity of transmitted data.', 'Implement CRC or checksum verification mechanisms to detect and reject corrupted or tampered data packets.'),
('Zigbee-7', 'Zigbee', 'Insecure key storage', 'Encryption keys are stored insecurely, such as in plain text or with weak encryption, making them vulnerable to theft.', 'Allows attackers to easily access and misuse encryption keys, compromising the confidentiality of encrypted data.', 'Store encryption keys securely using industry-standard encryption techniques, such as hardware-based secure storage or key vaults.'),
('Zigbee-8', 'Zigbee', 'Insecure key transportation', 'Encryption keys are transmitted insecurely, without proper encryption or authentication, risking interception or tampering.', 'Exposes encryption keys to interception or modification during transmission, leading to unauthorized access to encrypted data.', 'Use secure communication channels and encryption protocols (e.g., TLS) for transferring encryption keys securely between devices.'),
('Zigbee-9', 'Zigbee', 'Reusing CCM* and Initialization Vector (IV)', 'Reuse of cryptographic modes and initialization vectors (IVs) compromises the security of encryption schemes.', 'Weakens encryption strength and increases susceptibility to cryptographic attacks, such as replay or IV-based attacks.', 'Ensure unique IVs for each encryption session and avoid reusing CCM or other cryptographic modes to mitigate IV-based attacks.'),
('Zigbee-10', 'Zigbee', 'Sending security headers in clear text', 'Security headers, such as authentication tokens or session identifiers, are transmitted without encryption, risking interception.', 'Exposes sensitive security information to eavesdropping attacks, leading to unauthorized access or session hijacking.', 'Encrypt all communication containing security headers using secure encryption protocols (e.g., HTTPS) to prevent interception attacks.'),
('Zigbee-11', 'Zigbee', 'Predictable sensor polling rates', 'Sensor polling rates follow predictable patterns, allowing attackers to anticipate device behavior and launch targeted attacks.', 'Facilitates unauthorized access, data manipulation, or denial of service by exploiting predictable sensor behavior.', 'Randomize sensor polling intervals or implement dynamic polling algorithms to prevent predictability and thwart potential attacks.'),
('Zigbee-12', 'Zigbee', 'Default link key values', 'Devices use default or pre-configured link keys, which are easily guessable or widely known, compromising security.', 'Increases the risk of unauthorized access or interception of communication between devices using default link keys.', 'Generate unique and strong link keys for each device, disable default link keys, and implement secure key management practices.'),
('Zigbee-13', 'Zigbee', 'Unauthenticated acknowledgement packets (ACK)', 'Devices accept unauthenticated acknowledgment packets, potentially allowing attackers to inject malicious data.', 'May lead to data manipulation, replay attacks, or unauthorized commands being executed due to the acceptance of spoofed ACKs.', 'Implement authentication mechanisms for acknowledgment packets to ensure their legitimacy and prevent unauthorized data injection.'),
('Zigbee-14', 'Zigbee', 'CSMA/CA trade-off', 'Devices employing Carrier Sense Multiple Access with Collision Avoidance (CSMA/CA) face a trade-off between network congestion and security.', 'Increases susceptibility to channel jamming or eavesdropping attacks in congested network environments.', 'Optimize CSMA/CA parameters to balance network efficiency and security, and implement intrusion detection systems to detect abnormal network behavior.'),
('Zigbee-15', 'Zigbee', 'Unencrypted keys', 'Encryption keys are transmitted or stored without encryption, making them vulnerable to interception or theft.', 'Allows attackers to easily obtain encryption keys, compromising the confidentiality and integrity of encrypted data.', 'Encrypt encryption keys using secure encryption algorithms and ensure secure transmission and storage mechanisms for keys.'),
('Zigbee-16', 'Zigbee', 'Predictable PAN IDs and limited channels', 'Employing predictable Personal Area Network (PAN) IDs and operating within limited channels makes Zigbee networks susceptible to unauthorized access or interference.', 'Facilitates unauthorized access, device spoofing, or signal interference, compromising the integrity and confidentiality of Zigbee networks.', 'Randomize PAN IDs and utilize a wider range of available channels to enhance security and mitigate interference risks.'),
('Zigbee-17', 'Zigbee', 'Insufficient replay protections', 'Lack of robust replay protection mechanisms exposes devices to replay attacks, where attackers repeat intercepted commands to gain unauthorized access.', 'Allows attackers to impersonate legitimate users or devices, leading to unauthorized access, data manipulation, or service disruption.', 'Implement nonce-based message authentication codes (MACs) or timestamp verification to prevent replay attacks and enforce message freshness.'),
('Zigbee-18', 'Zigbee', 'Signal interference', 'Interference from external sources or neighboring devices disrupts communication, leading to data loss, packet corruption, or network instability.', 'Hampers reliable communication, causing operational disruptions or rendering devices vulnerable to interception, tampering, or denial of service.', 'Mitigate signal interference by utilizing interference-resistant protocols, optimizing antenna placement, and implementing frequency hopping techniques or signal filtering mechanisms.'),
('Zigbee-19', 'Zigbee', 'Command injection - Unauthorized network commissioning', 'Allows unauthorized entities to inject commands into the network commissioning process, potentially compromising device configurations or network integrity.', 'Leads to unauthorized access, data manipulation, or network compromise, posing security risks to connected devices and infrastructure.', 'Implement secure commissioning protocols, access controls, and authentication mechanisms to prevent unauthorized command injection and ensure the integrity of network commissioning processes.'),
('Zigbee-20', 'Zigbee', 'Lack of DDoS Protection Mechanisms', 'Absence of distributed denial-of-service (DDoS) protection mechanisms leaves devices vulnerable to resource exhaustion attacks, disrupting services or rendering devices inaccessible.', 'Increases the risk of service disruption, downtime, or unavailability due to DDoS attacks, potentially causing financial losses or reputational damage.', 'Implement DDoS mitigation strategies such as rate limiting, traffic filtering, network segmentation, and deploying DDoS protection services or appliances to mitigate DDoS attacks and ensure service availability.'),
('Zigbee-21', 'Zigbee', 'Re-using link key', 'Reusing link keys across multiple devices or sessions compromises security by allowing attackers to gain unauthorized access or intercept communication.', 'Increases the risk of unauthorized access, data interception, or manipulation, compromising the confidentiality and integrity of communication between devices.', 'Generate unique and strong link keys for each device or session, avoid key reuse, and implement secure key management practices to protect against unauthorized access and interception.'),
('Zigbee-22', 'Zigbee', 'TouchLink Factory reset', 'Vulnerability in TouchLink commissioning allows attackers to initiate a factory reset remotely, potentially compromising device configurations or network integrity.', 'Enables unauthorized access, device tampering, or network compromise, posing security risks to connected devices and infrastructure.', 'Patch firmware vulnerabilities, enforce secure commissioning procedures, and implement access controls to prevent unauthorized factory resets and ensure the integrity of network configurations.'),
('3a', '1', '1', '1', '1', '1'),
('ModbusTCP-1', 'ModbusTCP', 'Man-in-the-middle', 'Attackers intercept and manipulate communication between ModbusTCP devices, potentially altering data or commands exchanged.', 'May lead to unauthorized access, data manipulation, or device control, compromising the integrity and confidentiality of ModbusTCP networks.', 'Implement end-to-end encryption (e.g., TLS), authentication mechanisms, and secure communication channels to prevent MITM attacks.'),
('ModbusTCP-2', 'ModbusTCP', 'Injection attacks', 'Malicious entities inject unauthorized commands or data packets into ModbusTCP communication, exploiting vulnerabilities.', 'Can result in unauthorized access, data manipulation, or device compromise, posing security risks to ModbusTCP networks and connected devices.', 'Employ input validation, access controls, and application-layer security measures to mitigate injection attacks and sanitize incoming data.'),
('ModbusTCP-3', 'ModbusTCP', 'Replay attack', 'Attackers capture and replay previously recorded ModbusTCP messages, potentially gaining unauthorized access or control.', 'May lead to unauthorized access, data manipulation, or denial of service, compromising the integrity and reliability of ModbusTCP communication.', 'Implement nonce-based message authentication codes (MACs) or timestamp verification to prevent replay attacks and ensure message freshness.'),
('ModbusTCP-4', 'ModbusTCP', 'Fuzzing', 'Automated testing technique where invalid, unexpected, or random data is sent to ModbusTCP devices to identify vulnerabilities.', 'Can uncover software bugs, memory leaks, or buffer overflows, potentially leading to system crashes or unauthorized access.', 'Conduct regular security assessments, code reviews, and penetration testing, and implement input validation and error handling to mitigate fuzzing attacks and ensure robustness against unexpected input.'),
('ModbusTCP-5', 'ModbusTCP', 'DOS', 'Attackers flood ModbusTCP devices with a high volume of requests or traffic, overwhelming resources and causing service disruptions.', 'Results in service downtime, unavailability, or performance degradation, disrupting critical operations relying on ModbusTCP communication.', 'Implement rate limiting, traffic filtering, and network segmentation to mitigate DOS attacks, and deploy intrusion detection systems to detect and respond to abnormal traffic patterns.'),
('ModbusTCP-6', 'ModbusTCP', 'Malware injection', 'Malicious software is injected into ModbusTCP devices, compromising their integrity, stealing data, or enabling unauthorized access.', 'Leads to device compromise, data theft, or system control by attackers, posing significant security risks to ModbusTCP networks.', 'Implement device hardening measures, security patches, antivirus software, and network segmentation to prevent malware injection and limit the impact of potential infections on ModbusTCP devices and networks.'),
('ModbusTCP-7', 'ModbusTCP', 'Modbus Teardrop Module', 'Specific type of malware targeting ModbusTCP devices, designed to disrupt communication or compromise system integrity.', 'Can cause service disruptions, data corruption, or unauthorized access, posing security risks to ModbusTCP networks and connected devices.', 'Employ network security measures, malware detection tools, and timely security updates to detect and mitigate the Modbus Teardrop Module threat, and enforce access controls to limit the spread of malware within the network.'),
('ModbusTCP-8', 'ModbusTCP', 'Flag Flood Module', 'Malicious module targeting ModbusTCP systems, intended to flood devices with a large volume of communication flags.', 'Results in resource exhaustion, service disruptions, or denial of service, impacting the availability and reliability of ModbusTCP communication.', 'Implement traffic filtering, rate limiting, and intrusion detection systems to detect and mitigate Flag Flood Module attacks targeting ModbusTCP devices and networks.'),
('ModbusTCP-9', 'ModbusTCP', 'Port Pool Exhaustion Module', 'Attack module that exhausts available ports on ModbusTCP devices, limiting their ability to establish new connections.', 'Leads to service degradation, unavailability, or denial of service, hindering communication and disrupting critical operations relying on ModbusTCP.', 'Implement port security measures, limit concurrent connections, and employ network monitoring to detect and mitigate Port Pool Exhaustion Module attacks targeting ModbusTCP devices and infrastructure.'),
('ModbusTCP-10', 'ModbusTCP', 'Response Delay Module', 'Malicious module designed to introduce delays in ModbusTCP responses, slowing down communication and disrupting operations.', 'Causes service degradation, latency issues, or timeouts, impacting the reliability and efficiency of ModbusTCP communication.', 'Implement network traffic analysis, anomaly detection, and response time monitoring to detect and mitigate Response Delay Module attacks affecting ModbusTCP devices and networks.'),
('ModbusTCP-11', 'ModbusTCP', 'Baseline Response Relay Module', 'Module that alters ModbusTCP responses to mimic baseline behavior, making it difficult to detect abnormal activity or attacks.', 'Conceals malicious activities, making it challenging to identify and mitigate security threats targeting ModbusTCP communication.', 'Employ behavior-based anomaly detection, integrity checks, and protocol analysis to identify and mitigate attacks leveraging the Baseline Response Relay Module against ModbusTCP devices and networks.'),
('ModbusTCP-12', 'ModbusTCP', 'Buffer overflow', 'Exploitable software vulnerability where an attacker sends more data than a buffer can handle, leading to memory corruption.', 'Can result in system crashes, execution of arbitrary code, or unauthorized access, posing significant security risks to ModbusTCP devices.', 'Implement input validation, bounds checking, and secure coding practices to prevent buffer overflow vulnerabilities and ensure robustness against exploitation attempts targeting ModbusTCP systems.'),
('4a', '1', '1', '1', '1', '1'),
('ModBusRTU-1', 'ModbusRTU', 'Injection attacks', 'Malicious commands or code are injected into Modbus RTU communication channels, exploiting vulnerabilities to manipulate devices or data.', 'Can lead to unauthorized access, data corruption, or system compromise, compromising the integrity and security of operations.', 'Implement input validation, parameterized queries, and access controls to mitigate injection vulnerabilities, and ensure strict authentication and authorization mechanisms.'),
('ModBusRTU-2', 'ModbusRTU', 'Replay attack', 'Recorded Modbus RTU data packets are replayed to simulate legitimate commands, potentially leading to unauthorized access or device manipulation.', 'Enables unauthorized access, data manipulation, or service disruption by replaying legitimate commands or transactions.', 'Implement nonce-based message authentication codes (MACs) or timestamp verification to prevent replay attacks and enforce message freshness in Modbus RTU communications.'),
('ModBusRTU-3', 'ModbusRTU', 'Fuzzing', 'Invalid, unexpected, or random data is inputted into Modbus RTU systems to find vulnerabilities, potentially leading to system compromise.', 'Helps identify software vulnerabilities such as crashes or memory leaks, potentially leading to system compromise.', 'Conduct regular fuzz testing, perform code reviews, and implement input validation and error handling mechanisms to mitigate fuzzing-related vulnerabilities in Modbus RTU systems.'),
('ModBusRTU-4', 'ModbusRTU', 'Slave traffic jamming', 'Floods the Modbus RTU network with excessive traffic, overwhelming slave devices and disrupting communication.', 'Leads to network congestion, performance degradation, or service unavailability, affecting system reliability and operation.', 'Implement traffic prioritization, rate limiting, and network segmentation to mitigate the impact of slave traffic jamming attacks on Modbus RTU networks, and deploy network monitoring for early detection and mitigation.'),
('5a', '1', '1', '1', '1', '1'),
('ZWAVE-1', 'ZWAVE', 'Insecure Inclusion', 'Z-Wave networks allow new devices to be included without authentication.', 'Allows unauthorized devices to join the Z-Wave network, potentially compromising security and enabling unauthorized access to sensitive data or control over devices within the network.', 'Implement secure inclusion procedures such as requiring physical access or user authentication during device pairing, and utilize secure key exchange mechanisms to prevent unauthorized access.'),
('ZWAVE-2', 'ZWAVE', 'Insecure Transmission', 'Z-Wave uses weak encryption (AES-128) and some devices have no encryption.', 'Exposes communication between Z-Wave devices to interception or manipulation, allowing attackers to eavesdrop on sensitive data or inject malicious commands into the network.', 'Encrypt Z-Wave communication using secure cryptographic protocols (e.g., AES-128 encryption), and ensure that devices authenticate each other\'s identity to prevent interception or tampering.'),
('ZWAVE-3', 'ZWAVE', 'Replay Attack', 'Unencrypted or broken encryption Z-Wave commands can be captured and retransmitted to control devices.', 'Attackers capture and replay previously recorded Z-Wave messages, potentially gaining unauthorized access to devices or executing unauthorized commands on the network.', 'Implement nonce-based message authentication codes (MACs) or timestamp verification to prevent replay attacks and ensure that each message is unique, thereby thwarting unauthorized message playback.'),
('ZWAVE-4', 'ZWAVE', 'Weak Keys', 'Some Z-Wave devices have hardcoded encryption keys that are extracted and used to decrypt communications.', 'Use of weak cryptographic keys in Z-Wave devices makes them susceptible to brute-force attacks, enabling attackers to decrypt encrypted communication or impersonate legitimate devices.', 'Generate and use strong, randomly generated cryptographic keys (e.g., AES-128) for Z-Wave devices, and periodically update keys to mitigate the risk of brute-force attacks and enhance overall security.'),
('ZWAVE-5', 'ZWAVE', 'Forced Inclusion', 'Tools like RF jammer can jam the controller and force nodes into inclusion mode, allowing capture and replay attacks.', 'Attackers forcibly add unauthorized devices to the Z-Wave network, potentially compromising network security, disrupting operations, or gaining unauthorized control over devices.', 'Implement access controls and authentication mechanisms to prevent unauthorized device inclusion, such as requiring physical access or user authentication during the pairing process.'),
('ZWAVE-6', 'ZWAVE', 'Brute Force Attack', 'The 24-bit Network PIN can be brute forced as the key space is relatively small.', 'Attackers systematically attempt to guess cryptographic keys or credentials used in Z-Wave devices, potentially gaining unauthorized access to the network or compromising device security.', 'Enforce account lockout policies, implement rate limiting, and use strong, randomly generated passwords or keys to increase the complexity and resistance to brute-force attacks on Z-Wave devices.'),
('ZWAVE-7', 'ZWAVE', 'De-encapsulation', 'Z-Wave uses encapsulated frames which can be decapsulated into raw Z-Wave commands and replayed if encryption is broken.', 'Attackers exploit vulnerabilities to bypass encapsulation mechanisms and directly access or manipulate Z-Wave packets, potentially compromising the integrity or confidentiality of communication.', 'Regularly update device firmware to patch known vulnerabilities, employ network segmentation to limit attack surfaces, and use intrusion detection systems to detect and block unauthorized packet manipulation.'),
('ZWAVE-8', 'ZWAVE', 'Firmware Downgrade', 'Some devices allow firmware downgrades to older vulnerable versions without authentication.', 'Downgrading Z-Wave device firmware to older, potentially vulnerable versions can expose devices to known security flaws or exploits, compromising their security and integrity.', 'Implement secure firmware update mechanisms that validate the authenticity and integrity of firmware updates, and restrict the ability to downgrade firmware versions to prevent exposure to known vulnerabilities.'),
('ZWAVE-9', 'ZWAVE', 'Command Injection', 'Sending malformed input to handler functions could cause command injection and execution of arbitrary code.', 'Attackers inject malicious commands into Z-Wave messages, potentially compromising device functionality, executing unauthorized actions, or gaining unauthorized access to devices.', 'Implement input validation, sanitize user inputs, and enforce strict command execution policies to prevent command injection attacks, ensuring that only authorized and validated commands are executed.'),
('ZWAVE-10', 'ZWAVE', 'Fuzzing-vFuzz', 'VFuzz was tested on 19 different Z-Wave devices from diverse manufacturers.VFuzz discovered 10 distinct security vulnerabilities and 7 crashes across the tested devices.Six new CVE identifiers were assigned by the US CERT/CC for vulnerabilities found by VFuzz.The vulnerabilities included command injection, data tampering, impersonation, and DoS attacks.', 'Fuzzing attacks target Z-Wave devices with invalid, unexpected, or random data inputs to uncover vulnerabilities, potential bugs, or weaknesses in device firmware or communication protocols.', 'Conduct regular security assessments, penetration testing, and code reviews to identify and address vulnerabilities, implement input validation, and error handling to mitigate potential risks from fuzzing attacks.'),
('ZWAVE-11', 'ZWAVE', 'DDoS', 'A Distributed Denial of Service (DDoS) attack on Z-Wave networks involves flooding the network with a massive volume of traffic from multiple sources, overwhelming the Z-Wave devices and rendering them incapable of processing legitimate requests. ', 'Distributed Denial of Service (DDoS) attacks flood Z-Wave devices or networks with a high volume of traffic, overwhelming resources, disrupting operations, or rendering devices inaccessible.', 'Implement traffic filtering, rate limiting, and network segmentation to mitigate DDoS attacks, deploy intrusion detection systems to detect and respond to abnormal traffic patterns, and use redundancy to ensure service availability.'),
('6a', '1', '1', '1', '1', '1'),
('SPI-1', 'SPI', 'Memory Extraction-Reading/Dumping Firmware', 'Memory extraction in SPI involves retrieving data stored in SPI-connected devices\' memory, potentially accessing sensitive information.', 'Unauthorized access to firmware or sensitive data stored in SPI-connected devices, compromising confidentiality.', 'Implement secure boot mechanisms, encryption of stored data, and physical security measures to prevent memory extraction.'),
('SPI-2', 'SPI', 'Fault Injection', 'Fault injection is a security testing technique that deliberately introduces errors or disruptions into a system to observe its behavior under stress and analyze its vulnerability to potential faults.', 'Injection of faults or errors into SPI communication, potentially causing system malfunctions or security vulnerabilities.', 'Validate and sanitize input data, implement error detection and correction mechanisms, and use secure communication protocols to mitigate fault injection attacks.'),
('SPI-3', 'SPI', 'Physical Tampering', 'Physical tampering refers to the unauthorized modification or manipulation of a physical device or system,', 'Physical manipulation of SPI devices, leading to unauthorized access, data theft, or hardware compromise.', 'Utilize tamper-resistant hardware, secure enclosures, and environmental monitoring to detect and prevent physical tampering attempts on SPI devices.'),
('SPI-4', 'SPI', 'Side-Channel Attack', 'By monitoring the power consumption, attackers may gain insights into the cryptographic operations or sensitive computations being performed by the device.Cryptographic operations often involve different power consumption patterns depending on the data being processed.SPA exploits variations in power consumption to deduce information about the internal state of a device, such as secret keys used in cryptographic algorithms.', 'Exploitation of unintentional information leaks from SPI communication, revealing sensitive data or cryptographic keys.', 'Implement cryptographic protections, noise reduction techniques, and secure key management practices to mitigate side-channel attacks targeting SPI communication.'),
('SPI-5', 'SPI', 'Backdooring', 'Writing the modified firmware back to SPI chip', 'Insertion of unauthorized access points or malicious code into SPI-connected devices, compromising security and integrity.', 'Conduct regular code audits, firmware verification, and supply chain security checks to detect and prevent backdooring attempts on SPI devices.'),
('SPI-6', 'SPI', 'Firmware Update', 'Flaws in the update & upgrade process', 'Insecure firmware updates over SPI, leading to potential injection of malicious code or unauthorized modifications.', 'Implement secure firmware update mechanisms with cryptographic verification, signed updates, and secure boot procedures to prevent unauthorized firmware modifications during SPI updates.'),
('SPI-7', 'SPI', 'Fuzzing', 'Fuzzing in SPI entails sending malformed data to uncover vulnerabilities or bugs in firmware or communication protocols.', 'Sending malformed or unexpected data to SPI-connected devices to uncover vulnerabilities or weaknesses in firmware.', 'Conduct comprehensive security testing, input validation, and error handling to mitigate risks from fuzzing attacks targeting SPI communication.'),
('7a', '1', '1', '1', '1', '1'),
('I2C-1', 'I2C', 'Data Manipulation', 'Altering data being transmitted between I2C devices and the controller/processor, which could lead to unauthorized access, manipulation of sensor readings, or malfunctions in the system.', 'Unauthorized modification of data transmitted over I2C, leading to potential integrity breaches or incorrect operation of connected devices.', 'Implement message authentication codes (MACs), encryption, or checksum verification mechanisms to detect and prevent data manipulation attacks on the I2C bus.'),
('I2C-2', 'I2C', 'Patching Data', 'Injecting malicious data into I2C-based memory chips, sensors, or controlled devices, potentially causing system malfunctions or compromising the integrity of stored information.', 'Injection of patches or malicious code into I2C communication, potentially compromising the integrity or security of transmitted data or connected devices.', 'Employ secure boot mechanisms, cryptographic protections, and firmware validation processes to prevent unauthorized data patching or injection on the I2C bus.'),
('I2C-3', 'I2C', 'Clock Glitch', 'Manipulating the clock signal in the I2C bus, such as modifying its frequency, to disrupt communication between devices or introduce timing-based vulnerabilities.', 'Intentional disruption of I2C clock signals to induce errors or manipulate communication, potentially causing data corruption or device malfunction.', 'Use clock signal integrity checks, error detection and correction mechanisms, and physical security measures to mitigate the impact of clock glitch attacks on I2C communication.'),
('I2C-4', 'I2C', 'Address Spoofing', 'Falsifying device addresses on the I2C bus to impersonate legitimate devices, potentially gaining unauthorized access or executing unauthorized commands.', 'Spoofing of I2C device addresses to impersonate legitimate devices or gain unauthorized access to the bus, leading to security breaches or device compromise.', 'Implement device authentication mechanisms, address randomization, or encryption of bus traffic to prevent address spoofing attacks and ensure the integrity of I2C communication.'),
('I2C-5', 'I2C', 'Bricking', 'Overwriting firmware or using unsupported commands to permanently disable I2C devices.', 'Deliberate actions to render I2C-connected devices unusable or inoperable, causing disruption to operations or financial losses.', 'Implement secure firmware update mechanisms, error recovery procedures, and physical security controls to prevent bricking attacks and ensure the resilience of I2C-enabled devices.'),
('I2C-6', 'I2C', 'Bus Locking/Jamming', 'Using repeated START conditions without STOPs to monopolize the I2C bus indefinitely.An attacker gains control of the I2C bus, preventing legitimate devices from communicating and potentially manipulating data.', 'Flooding the I2C bus with excessive traffic or signals to disrupt communication, leading to denial of service or operational disruptions.', 'Employ traffic filtering, rate limiting, and intrusion detection systems to detect and mitigate bus locking or jamming attacks, ensuring the availability and reliability of I2C communication.'),
('I2C-7', 'I2C', 'Voltage Glitching', 'Introducing power supply glitches to trigger faults in communication.', 'Intentional manipulation of I2C bus voltage levels to induce errors or bypass security measures, potentially compromising the integrity or confidentiality of data.', 'Use voltage monitoring, noise reduction techniques, and physical security measures to detect and prevent voltage glitching attacks on I2C communication and safeguard sensitive data transmission.'),
('I2C-8', 'I2C', 'Reverse Engineering', 'Dismantling I2C devices and analyzing internal logic and memory contents', 'Analysis and reconstruction of I2C communication protocols or device functionalities to uncover vulnerabilities or extract sensitive information.', 'Implement secure design principles, obfuscation techniques, and intellectual property protection measures to deter reverse engineering attempts and protect the confidentiality of I2C communication.'),
('I2C-9', 'I2C', 'Side Channel Attack', 'Exploiting electromagnetic emissions or power analysis for data extraction.', 'Exploitation of unintended information leaks from I2C communication signals to extract sensitive data or cryptographic keys.', 'Employ cryptographic protections, noise reduction techniques, and secure key management practices to mitigate side-channel attacks targeting I2C communication and safeguard data confidentiality.'),
('GraphQL-1', 'GraphQL', 'Introspection Query', 'Utilizing introspection queries to gather schema information, potentially exposing sensitive details about the GraphQL API structure.', 'Allows attackers to gain insights into the GraphQL schema, aiding in crafting more targeted attacks or unauthorized data access.', 'Disable introspection queries in production environments, restrict access to GraphQL endpoints, and ensure sensitive schema details are properly secured and not exposed.'),
('GraphQL-2', 'GraphQL', 'Excessive Errors/Fields Suggestions', 'Exploiting GraphQL\'s error messages or field suggestions to extract information about the API structure or underlying data.', 'Enables attackers to glean insights into the API schema, potentially aiding in crafting more targeted attacks or unauthorized data access.', 'Minimize the information disclosed in error messages, implement rate limiting on GraphQL queries, and utilize authentication and authorization mechanisms to control access to sensitive data.'),
('GraphQL-3', 'GraphQL', 'Insecure Direct Object Reference', 'Exploiting insecurely exposed object references in GraphQL queries to access unauthorized data or resources.', 'Allows attackers to bypass access controls and directly access sensitive data or perform unauthorized actions on resources.', 'Implement proper access controls, validate and sanitize user inputs, enforce authorization checks at the application level, and limit access to sensitive resources based on user permissions.'),
('GraphQL-4', 'GraphQL', 'Brute Force Attack using Aliases', 'Launching brute force attacks by aliasing multiple fields or queries in GraphQL requests, overwhelming server resources.', 'Leads to server overload, performance degradation, or denial of service, impacting the availability and reliability of the GraphQL API.', 'Implement rate limiting, request throttling, and query complexity analysis to mitigate the impact of brute force attacks, and monitor server performance to detect and respond to abnormal traffic patterns.'),
('GraphQL-5', 'GraphQL', 'Brute Force Attack Using CrackQL Tool', 'Leveraging specialized tools like CrackQL to automate brute force attacks against GraphQL endpoints, attempting to discover sensitive data or execute unauthorized actions.', 'Increases the efficiency and scale of brute force attacks, potentially leading to unauthorized data access or resource manipulation.', 'Implement strong authentication mechanisms, enforce rate limiting on API requests, and regularly update and patch the GraphQL server to mitigate vulnerabilities exploited by brute force attacks.'),
('GraphQL-6', 'GraphQL', 'Injection Attack: SQL Injection', 'Injecting malicious SQL queries into GraphQL requests to manipulate or extract data from the underlying database.', 'Leads to unauthorized data access, data leakage, or database manipulation, compromising the integrity and confidentiality of data stored in the backend.', 'Utilize parameterized queries or ORM frameworks with built-in SQL injection protection, validate and sanitize user inputs, and implement access controls to prevent SQL injection attacks.'),
('GraphQL-7', 'GraphQL', 'Injection Attack: Cross Site Scripting', 'Injecting malicious scripts into GraphQL queries or responses to execute unauthorized actions in users\' browsers.', 'Can lead to session hijacking, data theft, or unauthorized actions performed on behalf of authenticated users, compromising the security of web applications.', 'Implement output encoding, input validation, and content security policies (CSP) to mitigate the risk of cross-site scripting (XSS) attacks, and sanitize user-generated content to prevent script injection.'),
('GraphQL-8', 'GraphQL', 'Injection Attack: Command Injection', 'Injecting malicious commands into GraphQL queries to execute arbitrary commands on the server or underlying infrastructure.', 'Can result in system compromise, data loss, or unauthorized access to sensitive resources, posing a significant security risk to the GraphQL server.', 'Implement input validation, command whitelisting, and parameterized queries to prevent command injection attacks, and run the GraphQL server with limited privileges to minimize the impact of successful attacks.'),
('GraphQL-9', 'GraphQL', 'DoS: Batching Attack', 'Exploiting batched GraphQL queries to overload server resources, leading to denial of service or performance degradation.', 'Results in server unavailability, service disruption, or degraded performance, affecting the reliability and availability of the GraphQL API.', 'Implement query complexity analysis, request rate limiting, and resource isolation to mitigate the impact of batching attacks, and scale server infrastructure to handle increased query loads efficiently.'),
('GraphQL-10', 'GraphQL', 'DoS: Alias Overloading', 'Overloading GraphQL queries with excessive aliases to consume server resources, causing denial of service or performance issues.', 'Leads to server overload, performance degradation, or denial of service, impacting the availability and reliability of the GraphQL API.', 'Implement query complexity analysis, request rate limiting, and query depth restrictions to mitigate the impact of alias overloading attacks, and monitor server performance to detect and respond to abnormal query patterns.'),
('GraphQL-11', 'GraphQL', 'DoS: Field Duplication Attack', 'Flooding GraphQL requests with duplicated fields to exhaust server resources, resulting in denial of service or performance degradation.', 'Results in server overload, performance degradation, or denial of service, impacting the availability and reliability of the GraphQL API.', 'Implement query complexity analysis, request rate limiting, and field duplication detection mechanisms to mitigate the impact of field duplication attacks, and monitor server performance for anomalies.'),
('GraphQL-12', 'GraphQL', 'DoS: Deep Recursive Query Attack', 'Sending deeply nested or recursive GraphQL queries to consume excessive server resources, causing denial of service or performance issues.', 'Leads to server overload, performance degradation, or denial of service, impacting the availability and reliability of the GraphQL API.', 'Implement query depth limits, request rate limiting, and query complexity analysis to mitigate the impact of deep recursive query attacks, and optimize query execution to handle complex queries efficiently.');

-- --------------------------------------------------------

--
-- Table structure for table `project`
--

CREATE TABLE `project` (
  `id` int(11) NOT NULL,
  `project_name` varchar(255) NOT NULL,
  `sbu` varchar(255) NOT NULL,
  `project_owner` varchar(255) NOT NULL,
  `protocols` text NOT NULL,
  `start_date` varchar(50) DEFAULT NULL,
  `end_date` varchar(50) DEFAULT NULL,
  `path` varchar(500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `project`
--

INSERT INTO `project` (`id`, `project_name`, `sbu`, `project_owner`, `protocols`, `start_date`, `end_date`, `path`) VALUES
(53, 'Tk_Jolt', 'Thermoking', 'Madhuri', '[\"Bluetooth\",\"BLE\",\"Zigbee\"]', '2024-04-01', '2024-04-30', 'Pentest-Checklist\\Madhuri\\Thermoking\\Tk_Jolt');

-- --------------------------------------------------------

--
-- Table structure for table `reports`
--

CREATE TABLE `reports` (
  `sl_no` int(20) NOT NULL,
  `project_name` varchar(200) NOT NULL DEFAULT 'default prj name',
  `report_name` varchar(200) NOT NULL DEFAULT 'default name',
  `report_path` varchar(200) NOT NULL DEFAULT 'default path'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `reports`
--

INSERT INTO `reports` (`sl_no`, `project_name`, `report_name`, `report_path`) VALUES
(33, 'Tk_Jolt', 'Tk_Jolt_report.docx', 'Reports\\Tk_Jolt_report.docx');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `findings`
--
ALTER TABLE `findings`
  ADD PRIMARY KEY (`sl_no`);

--
-- Indexes for table `project`
--
ALTER TABLE `project`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `project_name` (`project_name`);

--
-- Indexes for table `reports`
--
ALTER TABLE `reports`
  ADD PRIMARY KEY (`sl_no`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `findings`
--
ALTER TABLE `findings`
  MODIFY `sl_no` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=58;

--
-- AUTO_INCREMENT for table `project`
--
ALTER TABLE `project`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=54;

--
-- AUTO_INCREMENT for table `reports`
--
ALTER TABLE `reports`
  MODIFY `sl_no` int(20) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=34;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
